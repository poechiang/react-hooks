on:
  push:
    branches:
      - alpha2/*
permissions:
  contents: write
  pull-requests: write

name: release-please-alpha
env:
  ACTION_NAME: release-please-action
jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: release-please
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          target-branch: ${{ github.ref_name }}
          # optional. customize path to release-please-config.json
          # config-file: releases/release-please-config.json
          # optional. customize path to .release-please-manifest.json
          # manifest-file: releases/.release-please-manifest.json
          # skip-github-release: true
          # skip-github-pull-request: true

  output:
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - name: output
        if: ${{ steps.release.outputs.release_created }}
        run: |
          echo "==========output==============="
          echo "Releases created is ${{ steps.release.outputs.releases_created }}"
          echo "Paths created is ${{ steps.release.outputs.paths_released }}"
          echo "Prs created is ${{ steps.release.outputs.prs_created }}"
          echo "pr is ${{ steps.release.outputs.pr }}"
          echo "prs is ${{ steps.release.outputs.prs }}"

          echo "==========root==============="
          echo "release_created is ${{ steps.release.outputs.release_created }}"
          echo "upload_url is ${{ steps.release.outputs.upload_url }}"
          echo "html_url is ${{ steps.release.outputs.html_url }}"
          echo "tag_name is ${{ steps.release.outputs.tag_name }}"
          echo "major is ${{ steps.release.outputs.major }}"
          echo "minor is ${{ steps.release.outputs.minor }}"
          echo "patch is ${{ steps.release.outputs.patch }}"
          echo "sha is ${{ steps.release.outputs.sha }}"
  publish:
    needs: [version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      # Checkout
      - uses: actions/checkout@v3
        if: ${{ steps.release.outputs.release_created }}
      # Setup node
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}

      # Install dependencies
      - name: npm install
        run: npm install
        if: ${{ steps.release.outputs.release_created }}

      # Install dependencies
      - name: npm ci
        run: npm ci
        if: ${{ steps.release.outputs.release_created }}

      # Build output
      - name: Build
        run: npm run build
        if: ${{ steps.release.outputs.release_created }}
      # Publish to npm
      - run: npm publish --tag alpha
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_SECRET}}
        if: ${{ steps.release.outputs.release_created }}
